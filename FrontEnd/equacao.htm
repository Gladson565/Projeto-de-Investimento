<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gerador de Gráfico de Reta</title>
    <style>
        :root {
            --primary-color: #178582;
            --secondary-color: #3498db;
            --accent-color: #e74c3c;
            --light-color: #ecf0f1;
            --dark-color: #2c3e50;
            --success-color: #27ae60;
            --border-radius: 8px;
            --box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s ease;
        }

        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #0a1828;
            color: var(--dark-color);
            line-height: 1.6;
            padding: 20px;
            min-height: 100vh;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }

        .graph-card {
            background-color: rgb(255, 255, 255);
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            padding: 30px;
            margin-bottom: 30px;
        }

        h1 {
            color: var(--primary-color);
            margin-bottom: 25px;
            text-align: center;
            font-size: 2rem;
        }

        .input-group {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 20px;
            margin-bottom: 25px;
        }

        @media (max-width: 600px) {
            .input-group {
                grid-template-columns: 1fr;
            }
        }

        .input-field {
            margin-bottom: 15px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: var(--dark-color);
        }

        input {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #ddd;
            border-radius: var(--border-radius);
            font-size: 16px;
            transition: var(--transition);
        }

        input:focus {
            outline: none;
            border-color: var(--secondary-color);
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.2);
        }

        button {
            background-color: var(--secondary-color);
            color: white;
            border: none;
            padding: 14px 25px;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-size: 16px;
            font-weight: 500;
            transition: var(--transition);
            width: 100%;
            margin-top: 10px;
        }

        button:hover {
            background-color: #2980b9;
            transform: translateY(-2px);
            box-shadow: var(--box-shadow);
        }

        #grafico {
            max-width: 100%;
            height: auto;
            margin-top: 25px;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            display: none;
        }

        .result-container {
            margin-top: 25px;
            padding: 20px;
            background-color: var(--light-color);
            border-radius: var(--border-radius);
            text-align: center;
        }

        #mensagem {
            color: var(--accent-color);
            margin-top: 15px;
            text-align: center;
            font-weight: 500;
        }

        .loading {
            display: none;
            text-align: center;
            margin: 20px 0;
        }

        .loading-spinner {
            border: 4px solid rgba(0, 0, 0, 0.1);
            border-radius: 50%;
            border-top: 4px solid var(--secondary-color);
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 0 auto 15px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .equation-display {
            margin: 20px 0;
            padding: 15px;
            background-color: #f8f9fa;
            border-radius: var(--border-radius);
            font-family: monospace;
            font-size: 1.1rem;
            text-align: center;
            display: none;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="graph-card">
            <h1>Gerador de Gráfico de Reta</h1>
            
            <div class="input-group">
                <div class="input-field">
                    <label for="x1">Coordenada X₁</label>
                    <input type="number" id="x1" placeholder="Ex: 1" step="any">
                </div>
                
                <div class="input-field">
                    <label for="y1">Coordenada Y₁</label>
                    <input type="number" id="y1" placeholder="Ex: 2" step="any">
                </div>
                
                <div class="input-field">
                    <label for="x2">Coordenada X₂</label>
                    <input type="number" id="x2" placeholder="Ex: 3" step="any">
                </div>
                
                <div class="input-field">
                    <label for="y2">Coordenada Y₂</label>
                    <input type="number" id="y2" placeholder="Ex: 4" step="any">
                </div>
            </div>
            
            <button onclick="gerarGrafico()">Gerar Gráfico</button>
            
            <div class="loading" id="loading">
                <div class="loading-spinner"></div>
                <p>Processando...</p>
            </div>
            
            <div class="equation-display" id="equation-display"></div>
            
            <div class="result-container">
                <img id="grafico" src="" alt="Gráfico da reta">
            </div>
            
            <p id="mensagem"></p>
        </div>
    </div>

    <script>
        async function gerarGrafico() {
          const x1 = parseFloat(document.getElementById('x1').value);
          const y1 = parseFloat(document.getElementById('y1').value);
          const x2 = parseFloat(document.getElementById('x2').value);
          const y2 = parseFloat(document.getElementById('y2').value);
          const mensagem = document.getElementById('mensagem');
          const img = document.getElementById('grafico');

          mensagem.textContent = "";
          img.style.display = "none";

          if (isNaN(x1) || isNaN(y1) || isNaN(x2) || isNaN(y2)) {
              mensagem.textContent = "Por favor, preencha todos os campos corretamente.";
              return;
          }

          try {
              const response = await fetch("http://localhost:8000/api/equacao-reta-grafico", {
                  method: "POST",
                  headers: { "Content-Type": "application/json" },
                  body: JSON.stringify({ x1, y1, x2, y2 })
              });

              const data = await response.json();
              if (response.ok) {
                  img.src = `data:image/png;base64,${data.grafico_base64}`;
                  img.style.display = "block";
              } else {
                  mensagem.textContent = "Erro ao gerar gráfico.";
              }
          } catch (error) {
              mensagem.textContent = "Erro de conexão com o servidor.";
              console.error(error);
          }
      }
  </script>
</body>
</html>